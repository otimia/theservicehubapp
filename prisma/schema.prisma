// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id               String             @id @default(uuid())
  clrkId           String             @unique
  email            String             @unique
  name             String?
  image            String?
  role             Role               @default(USER)
  admin            Admin?             @relation(fields: [adminId], references: [id])
  adminId          String?            @unique
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  WorkspaceProfile WorkspaceProfile[]
}

model Admin {
  id         String      @id @default(uuid())
  userId     String      @unique
  workspaces Workspace[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  Profile    Profile[]
}

model WorkspaceProfile {
  id          String    @id @default(uuid())
  workspaceId String
  profileId   String
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  Profile     Profile   @relation(fields: [profileId], references: [id])
}

model Workspace {
  id               String             @id @default(uuid())
  name             String
  adminId          String
  admin            Admin              @relation(fields: [adminId], references: [id])
  connectAccountId String?            @default("")
  customerId       String?            @default("")
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  WorkspaceProfile WorkspaceProfile[]
  Subscription     Subscription?
  subscriptionId   String?            @unique
}

enum Role {
  ADMIN
  MEMBER
  USER
}

enum Plan {
  price_1OYxkqFj9oKEERu1NbKUxXxN
  price_1OYxkqFj9oKEERu1KfJGWxgN
}

enum SubscriptionType {
  freelance
  business
  enterprise
  free
}

model Subscription {
  id                   String           @id @default(uuid())
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  plan                 Plan?
  price                String?
  active               Boolean          @default(false)
  type                 SubscriptionType
  priceId              String?
  customerId           String?
  currentPeriodEndDate DateTime?
  subscritiptionId     String?          @unique

  workspaceId String    @unique
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@index([customerId])
}

enum ClientStatus {
  active
  inactive
  pending
}

model Client {
  id        String       @id @default(uuid())
  name      String
  email     String
  status    ClientStatus
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  clerkId   String
  orgId     String
}
